<#@ assembly name="EnvDTE" #>
<#@ include file="T4Toolbox.tt" #>
<#@ assembly name="Microsoft.VisualStudio.Shell.11.0" #>
<#@ assembly name="Microsoft.VisualStudio.Shell.Interop" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="Microsoft.VisualStudio.Shell" #>
<#@ import namespace="Microsoft.VisualStudio.Shell.Interop" #>
<#+
public class NCopCSharpTemplate : CSharpTemplate
{   
    protected string DefaultNamespace { get; private set; }

    public NCopCSharpTemplate() {
		DefaultNamespace = GetDefaultNamespace();
	}

	private string GetDefaultNamespace() {
		var dte = (DTE)TransformationContext.Current.GetService(typeof(DTE));
		ProjectItem projectItem = dte.Solution.FindProjectItem(TransformationContext.Current.Host.TemplateFile);
		Project project = projectItem.ContainingProject;
		var vsSolution = (IVsSolution)TransformationContext.Current.GetService(typeof(SVsSolution));
		IVsHierarchy vsHierarchy;
		ErrorHandler.ThrowOnFailure(vsSolution.GetProjectOfUniqueName(project.FullName, out vsHierarchy));
		uint projectItemId;
		ErrorHandler.ThrowOnFailure(vsHierarchy.ParseCanonicalName(projectItem.FileNames[1], out projectItemId));
		object defaultNamespace;
		ErrorHandler.ThrowOnFailure(vsHierarchy.GetProperty(projectItemId, (int)VsHierarchyPropID.DefaultNamespace, out defaultNamespace));
		
		return defaultNamespace.ToString();
	}
}
#>
